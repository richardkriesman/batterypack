{
  "$id": "https://batterypack.richardkriesman.com/schemas/batterypack-0.5.0.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "batterypack configuration",
  "type": "object",
  "required": ["batterypack", "name"],
  "properties": {
    "author": {
      "title": "Project author information",
      "type": "object",
      "required": ["name", "email"],
      "properties": {
        "name": {
          "title": "Author name",
          "type": "string"
        },
        "email": {
          "title": "Author email address",
          "type": "string",
          "format": "email"
        }
      }
    },
    "batterypack": {
      "title": "batterypack options",
      "type": "object",
      "required": ["version"],
      "properties": {
        "version": {
          "title": "Required version",
          "description": "Version of batterypack required by this project",
          "type": "string"
        }
      }
    },
    "build": {
      "title": "Build options",
      "type": "object",
      "properties": {
        "features": {
          "title": "Opt-in language features",
          "description": "This section allows for gradual adoption of new but breaking language features. Over time, some feature flags will be phased out under the deprecation policy and become enabled by default.",
          "type": "object",
          "properties": {
            "requireExplicitOverride": {
              "title": "Require overridden properties to be explicitly marked",
              "description": "Whether to require the `override` keyword when a child class overrides a parent property.",
              "type": "boolean",
              "default": true
            }
          }
        },
        "target": {
          "title": "Build target",
          "description": "Target version of the ECMAScript standard version to build for.",
          "type": "string",
          "enum": [
            "ES2015",
            "ES2016",
            "ES2017",
            "ES2018",
            "ES2019",
            "ES2020",
            "ES2021",
            "ESNext"
          ]
        }
      }
    },
    "dependencies": {
      "title": "Package dependencies",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": ["version"],
            "properties": {
              "version": {
                "title": "Dependency version expression",
                "type": "string",
                "description": "Package version to match in as an NPM version expression."
              },
              "type": {
                "title": "Dependency relationship type",
                "type": "string",
                "description": "Relationship of the dependency to the project.",
                "enum": ["development", "private", "peer"],
                "default": "private"
              },
              "optional": {
                "title": "Optional relationship flag",
                "type": "boolean",
                "description": "Whether the dependency is optional.",
                "default": false
              }
            }
          },
          {
            "title": "Dependency version expression",
            "type": "string",
            "description": "Package version to match in as an NPM version expression."
          }
        ]
      }
    },
    "description": {
      "title": "Project description",
      "type": "string"
    },
    "dockerignore": {
      "title": "Additional dockerignore rules",
      "type": "array",
      "examples": [["/build"]],
      "items": {
        "type": "string",
        "examples": ["/build"]
      },
      "uniqueItems": true,
      "additionalItems": true
    },
    "entrypoint": {
      "title": "Program entrypoint",
      "description": "Program entrypoint for compiled and source code relative to the project root.",
      "type": "object",
      "examples": [
        {
          "build": "build/index.js",
          "source": "src/index.tsx"
        }
      ],
      "required": ["build", "source"],
      "properties": {
        "build": {
          "title": "Build entrypoint",
          "type": "string",
          "examples": ["build/index.js"]
        },
        "source": {
          "title": "Source entrypoint",
          "type": "string",
          "examples": ["src/index.tsx"]
        }
      }
    },
    "gitignore": {
      "title": "Additional gitignore rules",
      "type": "array",
      "examples": [["/build"]],
      "items": {
        "type": "string",
        "examples": ["/build"]
      },
      "uniqueItems": true,
      "additionalItems": true
    },
    "license": {
      "title": "Project license",
      "type": "string",
      "description": "Software Package Data Exchange (SPDX) license expression",
      "default": "UNLICENSED"
    },
    "name": {
      "title": "Project name",
      "type": "string",
      "examples": ["my-program"]
    },
    "overrides": {
      "title": "Configuration overrides",
      "description": "Override component configuration options. This may break your toolchain!",
      "type": "object",
      "properties": {
        "package.json": {
          "title": "package.json overrides",
          "description": "NPM package configuration overrides.",
          "type": "object",
          "additionalProperties": true
        },
        "tsconfig.json": {
          "title": "Typescript overrides",
          "description": "TypeScript compiler option overrides.",
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "scopes": {
      "title": "Scoped registries",
      "description": "Define specific registries to use for package scopes.",
      "type": "object",
      "examples": [
        {
          "scope": {
            "origin": "https://registry.example.com",
            "credential": "my-credential"
          }
        }
      ],
      "additionalProperties": {
        "type": "object",
        "examples": [
          {
            "origin": "https://registry.example.com",
            "credential": "my-credential"
          }
        ],
        "required": ["origin"],
        "properties": {
          "origin": {
            "type": "string",
            "title": "Registry server origin",
            "examples": ["https://registry.example.com"]
          },
          "credential": {
            "type": "string",
            "title": "Credential name",
            "description": "The name of the credential stored in .batterypack/credentials.yml",
            "examples": ["my-credential"]
          }
        },
        "additionalProperties": true
      }
    },
    "subprojects": {
      "title": "Subprojects",
      "type": "array",
      "description": "List of paths to batterypack projects that need to be built before this project.",
      "items": {
        "type": "string",
        "examples": ["subproject-a"]
      }
    },
    "unitTest": {
      "title": "Unit tests",
      "description": "Run unit tests in your projects.",
      "type": "object",
      "properties": {
        "coverage": {
          "title": "Code coverage",
          "description": "Analyze test coverage and enforce minimum coverage requirements.",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enable code coverage",
              "description": "Whether code coverage checks are enabled. This may cause a performance impact on your tests.",
              "type": "boolean"
            },
            "rules": {
              "title": "Code coverage rules",
              "description": "Rules which must be met for code coverage checks to pass.",
              "type": "object",
              "properties": {
                "minBranchCoverage": {
                  "title": "Minimum branch coverage (percent)",
                  "type": "integer"
                },
                "minFunctionCoverage": {
                  "title": "Minimum function coverage (percent)",
                  "type": "integer"
                },
                "minLineCoverage": {
                  "title": "Minimum line coverage (percent)",
                  "type": "integer"
                },
                "minStatementCoverage": {
                  "title": "Minimum statement coverage (percent)",
                  "type": "integer"
                }
              }
            },
            "ignore": {
              "title": "Ignored file patterns",
              "description": "Regular expressions which match file paths to ignore. These paths are relative to the project's source directory.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "version": {
      "title": "Project version number",
      "type": "string",
      "default": "1.0.0"
    }
  },
  "additionalProperties": true
}
