import { Buffer } from "buffer";

import { makeTypescriptConfig } from "@project/compiler";
import { Derivation } from "@project/persistence/derivation/abstract";
import { Project } from "@project/project";
import { ProjectPaths } from "@project/paths";

/**
 * Builds a tsconfig.json file to configure TypeScript. This file doesn't
 * *need* to exist because batterypack takes care of compiling, but it's nice to
 * have for configuring IDEs.
 */
export class TypeScriptDerivation implements Derivation {
  filePath = "tsconfig.json";
  toolId = "typescript";

  public async makeDerivation(project: Project): Promise<Buffer> {
    const contents = {
      _warning:
        "This file is automatically generated by batterypack. " +
        "Changes will be overwritten!",
      ...(await makeTypescriptConfig({
        sourcePath: await project.resolver.resolve(ProjectPaths.dirs.source),
        buildPath: await project.resolver.resolve(ProjectPaths.dirs.build),
        // tests are included in tsconfig.json to work around module resolution
        // issues with tests in WebStorm
        excludeTests: false,
        subprojects: await project.getSubprojects(),
        target: project.config.build?.target,
        useLegacyModules: project.config.useLegacyModules,
      })),
    };
    return Buffer.from(JSON.stringify(contents, null, 2), "utf-8");
  }
}
