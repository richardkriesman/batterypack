import { Buffer } from "buffer";

import { Derivation } from "./abstract";
import { State } from "../state";
import { PathResolver } from "../../path";
import { makeCompilerConfig } from "../../tool/compiler";

/**
 * Builds a tsconfig.json file to configure TypeScript. This file doesn't
 * *need* to exist because Rocket takes care of compiling, but it's nice to have
 * for configuring IDEs.
 */
export class TypeScriptDerivation implements Derivation {
  public getFilePath(): string {
    return "tsconfig.json";
  }

  public async makeDerivation(
    state: State,
    resolver: PathResolver
  ): Promise<Buffer> {
    const contents = {
      _warning:
        "This file is automatically generated by Rocket. " +
        "Changes will be overwritten!",
      ...(await makeCompilerConfig(resolver)),
    };
    return Buffer.from(JSON.stringify(contents), "utf-8");
  }
}
